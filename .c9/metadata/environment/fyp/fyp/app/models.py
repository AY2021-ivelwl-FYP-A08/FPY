{"filter":false,"title":"models.py","tooltip":"/fyp/fyp/app/models.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":12,"column":0},"action":"remove","lines":["from flask_appbuilder import Model","from sqlalchemy import Column, Integer, String, ForeignKey","from sqlalchemy.orm import relationship","","\"\"\"","","You can use the extra Flask-AppBuilder fields and Mixin's","","AuditMixin will add automatic timestamp of created and modified by who","","","\"\"\"",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":72,"column":29},"action":"insert","lines":["import datetime","","from flask_appbuilder import Model","from sqlalchemy import Column, Date, ForeignKey, Integer, String, Table, Text","from sqlalchemy.orm import relationship","","","class Department(Model):","    id = Column(Integer, primary_key=True)","    name = Column(String(50), unique=True, nullable=False)","","    def __repr__(self):","        return self.name","","","class Function(Model):","    id = Column(Integer, primary_key=True)","    name = Column(String(50), unique=True, nullable=False)","","    def __repr__(self):","        return self.name","","","class Benefit(Model):","    id = Column(Integer, primary_key=True)","    name = Column(String(50), unique=True, nullable=False)","","    def __repr__(self):","        return self.name","","","assoc_benefits_employee = Table(","    \"benefits_employee\",","    Model.metadata,","    Column(\"id\", Integer, primary_key=True),","    Column(\"benefit_id\", Integer, ForeignKey(\"benefit.id\")),","    Column(\"employee_id\", Integer, ForeignKey(\"employee.id\")),",")","","","def today():","    return datetime.datetime.today().strftime(\"%Y-%m-%d\")","","","class EmployeeHistory(Model):","    id = Column(Integer, primary_key=True)","    department_id = Column(Integer, ForeignKey(\"department.id\"), nullable=False)","    department = relationship(\"Department\")","    employee_id = Column(Integer, ForeignKey(\"employee.id\"), nullable=False)","    employee = relationship(\"Employee\")","    begin_date = Column(Date, default=today)","    end_date = Column(Date)","","","class Employee(Model):","    id = Column(Integer, primary_key=True)","    full_name = Column(String(150), nullable=False)","    address = Column(Text(250), nullable=False)","    fiscal_number = Column(Integer, nullable=False)","    employee_number = Column(Integer, nullable=False)","    department_id = Column(Integer, ForeignKey(\"department.id\"), nullable=False)","    department = relationship(\"Department\")","    function_id = Column(Integer, ForeignKey(\"function.id\"), nullable=False)","    function = relationship(\"Function\")","    benefits = relationship(","        \"Benefit\", secondary=assoc_benefits_employee, backref=\"employee\"","    )","","    begin_date = Column(Date, default=datetime.date.today(), nullable=True)","    end_date = Column(Date, default=datetime.date.today(), nullable=True)","","    def __repr__(self):","        return self.full_name"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":0},"end":{"row":10,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1604068566492,"hash":"a852db8a2f9df5db7db80b0790c2a7d7b380ce3a"}